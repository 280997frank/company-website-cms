import React, { useState } from "react";
import Head from "next/head";
import { Formik, Form } from "formik";
import { BsLinkedin } from "react-icons/bs";

import FormInput from "@/components/Molecules/FormInput";
import RichTextInput from "@/components/Molecules/RichTextInput";
import MediaUpload from "@/components/Molecules/MediaUpload";
import Table from "@/components/Molecules/Table";
import MediaUploadGallery from "@/components/Molecules/MediaUploadGallery";
import Switch from "@/components/Atoms/Switch";

import styles from "@/styles/Home.module.css";

const TABLE_DATA = [
  {
    id: "xxx",
    title: "XXX",
    client: "XXX",
    yearOfWork: "2022",
    highlight: "title",
    display: true,
  },
  {
    id: "aaa",
    title: "AAA",
    client: "AAA",
    yearOfWork: "1990",
    highlight: "client",
    display: false,
  },
  {
    id: "vvv",
    title: "VVV",
    client: "VVV",
    yearOfWork: "1990",
    highlight: "client",
    display: false,
  },
];

const DisplaySection = () => {
  const [tableData, setTableData] = useState(TABLE_DATA);
  const [isTextInputDisabled, setTextInputDisabled] = useState(false);

  return (
    <Form>
      <FormInput id="textInput1" name="textInput1" label="TEXT INPUT 1" />
      <br />
      <FormInput
        id="textInput2"
        name="textInput2"
        label="TEXT INPUT 2"
        tooltip="xxx"
        leftElement={<BsLinkedin color="white" />}
      />
      <br />
      <FormInput
        id="textInput3"
        name="textInput3"
        label="TEXT INPUT 3"
        tooltip="xxx"
        leftElement={<BsLinkedin color="white" />}
        rightElement={
          <Switch
            isChecked={isTextInputDisabled}
            onChange={async () =>
              setTextInputDisabled((prevState) => !prevState)
            }
          />
        }
        isDisabled={isTextInputDisabled}
      />
      <br />
      <RichTextInput id="rich-text" name="richText" label="RICH TEXT INPUT" />
      <br />
      <MediaUpload
        name="image"
        type="image"
        accept="image/*"
        label="HERO IMAGE"
        id="image"
      />
      <br />
      <MediaUpload
        name="video"
        type="video"
        accept="video/mp4"
        label="HERO VIDEO"
        id="video"
      />
      <br />
      <MediaUploadGallery
        label="PROJECT IMAGES"
        addNewButton={{ url: "/test", bgColor: "#C992FF" }}
        name="imageUpload"
      />
      <br />
      <Table
        dropdownOptions={[
          { value: "title", label: "TITLE" },
          { value: "client", label: "CLIENT" },
        ]}
        caption="WORK LIST"
        tooltip="A table tooltip"
        columnHeaders={[
          { name: "title", label: "TITLE" },
          { name: "client", label: "CLIENT" },
          { name: "yearOfWork", label: "YEAR OF WORK" },
          { name: "highlight", label: "HIGHLIGHT", type: "dropdown" },
          { name: "display", label: "DISPLAY", type: "switch" },
        ]}
        data={tableData}
        onSwitchChange={async (_, rowId) => {
          setTableData((prevState) => {
            const newState = prevState.map((row) => {
              if (row.id === rowId) {
                row.display = !row.display;
              }

              return row;
            });

            return newState;
          });
        }}
        onRowSwitch={async (rowId, targetRowIndex) => {
          console.log(`Row ${rowId} is moved to row #${targetRowIndex}`);
          setTableData((prevState) => {
            const sourceIndex = prevState.findIndex((row) => row.id === rowId);
            const newState = [...prevState];
            const [movedRow] = newState.splice(sourceIndex, 1);
            newState.splice(targetRowIndex, 0, movedRow);

            return newState;
          });
        }}
        loading={false}
        onRemove={async (value) => {
          console.log("Remove", value);
        }}
        search={async (val) => console.log("searching", val)}
        addNewButton={{ bgColor: "#C992FF", url: "/test" }}
      />
    </Form>
  );
};

export default function Home() {
  return (
    <div className={styles.container} data-testid="xx">
      <Head>
        <title>Form Components</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Formik
          initialValues={{
            textInput1: "",
            textInput2: "",
            textInput3: "",
            richText: "",
            image: "",
            video: "",
            imageUpload: [],
          }}
          onSubmit={() => {}}
          component={DisplaySection}
        />
      </main>
    </div>
  );
}
