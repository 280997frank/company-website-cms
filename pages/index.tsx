import { Form, Formik } from "formik";
import Head from "next/head";
import { useEffect, useState } from "react";

import FormInput from "@/components/Molecules/FormInput";

import styles from "@/styles/Home.module.css";
import {
  Box,
  Button,
  Center,
  Image,
  Stack,
  Text,
  useToast,
} from "@chakra-ui/react";

import BgImage from "@/assets/images/BGImageDefault1.png";
import imgAstronot from "@/assets/images/VisualLogin.png";
import logoZodiac from "@/assets/images/ZodiacLogo.png";

import { requiredEmail, requiredString } from "@/constants/validationSchema";
import { object } from "yup";
// import { useAppDispatch } from "@/hooks";
import { useLoginSubmit } from "@/hooks/auth";
import { getAccessToken, storeAccessToken } from "../utils";

// import { FaEyeSlash, FaEye } from "react-icons/fa";
const intitualvalues = {
  email: "",
  password: "",
};
const validationSchema = object({
  email: requiredEmail,
  password: requiredString,
});

export default function Home() {
  // const dispatch = useAppDispatch();
  const toast = useToast();
  const [isLoggedIn, setLoginStatus] = useState(false);
  const [isCheckingLoginStatus, setLoginCheckingStatus] = useState(true);
  const {
    loginSubmit,
    responseLogin,
    loading: loadingLogin,
  } = useLoginSubmit();

  // check and set status is already login
  useEffect(() => {
    const token = getAccessToken();

    if (token.length > 0) {
      setLoginStatus(true);
    } else {
      setLoginCheckingStatus(false);
    }
  }, []);

  useEffect(() => {
    if (responseLogin) {
      storeAccessToken(responseLogin.login.token);
      setLoginStatus(true);
    }
  }, [toast, responseLogin]);
  // redirect if already login
  useEffect(() => {
    if (isLoggedIn) {
      window.location.href = "/our-story";
    }
  }, [isLoggedIn]);

  if (isCheckingLoginStatus) {
    return <Center h="100vh">Loading ......</Center>;
  }

  return (
    <div className={styles.container} data-testid="xx">
      <Head>
        <title>ZODIAC SOLUTION CMS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <main className={styles.main}> */}
      <Stack
        minH="100vh"
        h="100vh"
        position="relative"
        w="100%"
        bgImage={BgImage.src}
        overflow="hidden"
        bgRepeat="no-repeat"
        direction="column"
      >
        <Image
          alt="imgAstronot"
          src={imgAstronot.src}
          w="100%"
          h="100%"
          position="absolute"
          // animation={animationLight}
        ></Image>
        <Center h="100%">
          <Box
            bgColor="#081029"
            minW="35rem"
            w="35rem"
            overflow="hidden"
            p="70px"
            m="0 auto"
            position="relative"
            boxShadow="lg"
          >
            <Image
              alt="lgoZodiac"
              src={logoZodiac.src}
              w="35%"
              h="100%"
              m="auto"
            ></Image>
            <Text
              color="#00FFDA"
              fontFamily="Mark Pro"
              fontWeight="700"
              fontSize="1.5rem"
              lineHeight="normal"
              mt="1.5rem"
              mb="1.5rem"
            >
              Welcome to Zodiac Content
              <br />
              Management System (CMS)
            </Text>
            <Formik
              initialValues={intitualvalues}
              validationSchema={validationSchema}
              onSubmit={async (values) => {
                await loginSubmit({
                  variables: {
                    email: values.email,
                    password: values.password,
                  },
                });
              }}
            >
              {() => {
                return (
                  <Form>
                    <FormInput
                      id="email"
                      name="email"
                      label="EMAIL"
                      placeholder="Email"
                    />
                    <br />
                    <FormInput
                      id="password"
                      name="password"
                      label="PASSWORD"
                      type="password"
                      placeholder="Password"
                    />
                    <br />
                    <Button
                      width="full"
                      border="none"
                      borderRadius="none"
                      bgColor="#00FFDA"
                      type="submit"
                      isLoading={loadingLogin}
                    >
                      LOGIN
                    </Button>
                  </Form>
                );
              }}
            </Formik>
          </Box>
        </Center>
      </Stack>

      {/* </main> */}
    </div>
  );
}
